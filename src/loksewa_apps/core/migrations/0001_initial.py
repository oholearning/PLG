# Generated by Django 2.1.3 on 2018-12-02 03:51

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer_Multiple_selection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('option_a', models.CharField(max_length=350, verbose_name='Option A')),
                ('option_b', models.CharField(max_length=350, verbose_name='Option B')),
                ('option_c', models.CharField(max_length=350, verbose_name='Option C')),
                ('option_a_status', models.BooleanField(default=False)),
                ('option_b_status', models.BooleanField(default=False)),
                ('option_c_status', models.BooleanField(default=False)),
                ('answer_description', models.TextField(blank=True, default='', verbose_name='Answer description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer_Multiple_selection_With_Five_Option',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('option_a', models.CharField(max_length=350, verbose_name='Option A')),
                ('option_b', models.CharField(max_length=350, verbose_name='Option B')),
                ('option_c', models.CharField(max_length=350, verbose_name='Option C')),
                ('option_d', models.CharField(max_length=350, verbose_name='Option D')),
                ('option_e', models.CharField(max_length=350, verbose_name='Option E')),
                ('option_a_status', models.BooleanField(default=False)),
                ('option_b_status', models.BooleanField(default=False)),
                ('option_c_status', models.BooleanField(default=False)),
                ('option_d_status', models.BooleanField(default=False)),
                ('option_e_status', models.BooleanField(default=False)),
                ('answer_description', models.TextField(blank=True, default='', verbose_name='Answer description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer_One_Blank',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('option_a', models.CharField(max_length=40, verbose_name='Option A')),
                ('option_b', models.CharField(max_length=40, verbose_name='Option B')),
                ('option_c', models.CharField(max_length=40, verbose_name='Option C')),
                ('option_d', models.CharField(max_length=40, verbose_name='Option D')),
                ('option_e', models.CharField(max_length=40, verbose_name='Option E')),
                ('correct_answer', models.CharField(choices=[('a', 'Option A'), ('b', 'Option B'), ('c', 'Option C'), ('d', 'Option D'), ('e', 'Option E')], default='a', max_length=1, verbose_name='Correct Option')),
                ('answer_description', models.TextField(blank=True, default='', verbose_name='Answer description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer_Three_Blank',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('option_a', models.CharField(max_length=40, verbose_name='Option A')),
                ('option_b', models.CharField(max_length=40, verbose_name='Option B')),
                ('option_c', models.CharField(max_length=40, verbose_name='Option C')),
                ('option_d', models.CharField(max_length=40, verbose_name='Option D')),
                ('option_e', models.CharField(max_length=40, verbose_name='Option E')),
                ('option_f', models.CharField(max_length=40, verbose_name='Option E')),
                ('option_g', models.CharField(max_length=40, verbose_name='Option G')),
                ('option_h', models.CharField(max_length=40, verbose_name='Option H')),
                ('option_i', models.CharField(max_length=40, verbose_name='Option I')),
                ('correct_answer_first_blank', models.CharField(choices=[('a', 'Option A'), ('b', 'Option B'), ('c', 'Option C')], default='a', max_length=1, verbose_name='Correct Option for first blank')),
                ('correct_answer_second_blank', models.CharField(choices=[('d', 'Option D'), ('e', 'Option E'), ('f', 'Option F')], default='d', max_length=1, verbose_name='Correct Option for second blank')),
                ('correct_answer_third_blank', models.CharField(choices=[('g', 'Option G'), ('h', 'Option H'), ('i', 'Option I')], default='g', max_length=1, verbose_name='Correct Option for third blank')),
                ('answer_description', models.TextField(blank=True, default='', verbose_name='Answer description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer_Two_Blank',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('option_a', models.CharField(max_length=40, verbose_name='Option A')),
                ('option_b', models.CharField(max_length=40, verbose_name='Option B')),
                ('option_c', models.CharField(max_length=40, verbose_name='Option C')),
                ('option_d', models.CharField(max_length=40, verbose_name='Option D')),
                ('option_e', models.CharField(max_length=40, verbose_name='Option E')),
                ('option_f', models.CharField(max_length=40, verbose_name='Option E')),
                ('correct_answer_first_blank', models.CharField(choices=[('a', 'Option A'), ('b', 'Option B'), ('c', 'Option C')], default='a', max_length=1, verbose_name='Correct Option for first blank')),
                ('correct_answer_second_blank', models.CharField(choices=[('d', 'Option D'), ('e', 'Option E'), ('f', 'Option F')], default='d', max_length=1, verbose_name='Correct Option for second blank')),
                ('answer_description', models.TextField(blank=True, default='', verbose_name='Answer description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer_With_Numeric_Input',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('answer_description', models.TextField(blank=True, default='', verbose_name='Answer description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer_With_Text_Input',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('answer_description', models.TextField(blank=True, default='', verbose_name='Answer description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Essay_Set',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('set_name', models.CharField(max_length=40, verbose_name='Set name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Essay_Writing_Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('question_description', models.TextField(blank=True, default='', verbose_name='Essay question')),
                ('essay_type', models.CharField(choices=[('Ae', 'Argument Essay'), ('Ie', 'Issue Essay')], default='Ae', max_length=2, verbose_name='Essay type')),
                ('answer', models.TextField(blank=True, default='', verbose_name='essay answer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gre_common_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Quant_Data_Analysis_Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('upload_analysis_image', models.FileField(upload_to='uploads/%Y/%m/%d/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quant_Set',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('set_name', models.CharField(max_length=40, verbose_name='Set name')),
                ('set_difficulty_level', models.CharField(choices=[('E', 'Easy'), ('M', 'Medium'), ('H', 'Hard')], default='E', max_length=1, verbose_name='set dificulty')),
                ('data_analysis_question_collection', models.ManyToManyField(blank=True, to='core.Quant_Data_Analysis_Question', verbose_name='Data analysis question collection')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Simple_Question',
            fields=[
                ('question', models.TextField(blank=True, default='', verbose_name='Question')),
                ('question_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('question_updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('difficulty_level', models.CharField(choices=[('E', 'Easy'), ('M', 'Medium'), ('H', 'Hard')], default='E', max_length=1)),
                ('question_section', models.CharField(choices=[('Ve', 'Verbal'), ('Qu', 'Quant'), ('Ie', 'Issue Essay'), ('Ae', 'Argument Essay')], default='Ve', max_length=2, verbose_name='section')),
                ('question_subject', models.CharField(choices=[('Verbal', (('SC', 'Sentence Completion'), ('RC', 'Reading Comprehension'), ('CR', 'Critical reasoning'), ('IE', 'Issue essay'), ('AE', 'Argument essay'))), ('Quant', (('Ar', 'Arithmetic'), ('Al', 'Algebra'), ('Ge', 'Geometry'), ('DA', 'Data analysis'))), ('uk', 'unknown')], default='SC', max_length=6, verbose_name='subject')),
                ('answer_type', models.CharField(choices=[('SOB', 'Simple one blank'), ('STB', 'Simple two blank'), ('STr', 'Simple three blank'), ('NI', 'Numeric input'), ('TI', 'Text input'), ('MC3', 'Multiple check answer with 3 options'), ('MC5', 'Multiple check answer with 5 options')], max_length=3, verbose_name='Answer type')),
                ('answer_id', models.CharField(max_length=100, verbose_name='Answer Id')),
                ('question_description', models.TextField(blank=True, default='', verbose_name='question description')),
                ('published', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='yes', max_length=3, verbose_name='published')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Verbal_One_Paragraph_Many_Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('question_paragraph', models.TextField(blank=True, default='', verbose_name='Question paragraph')),
                ('Question_type', models.CharField(choices=[('RC', 'Reading Comprehension'), ('CR', 'Critical Reasoning')], default='RC', max_length=2, verbose_name='verbal question type')),
                ('paragraph_question_collection', models.ManyToManyField(blank=True, to='core.Simple_Question', verbose_name='Paragraph question collection')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Verbal_Paragraph_Selection_Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('question_paragraph', models.TextField(blank=True, default='', verbose_name='Question paragraph')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Simple_Question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Verbal_Set',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('set_name', models.CharField(max_length=40, verbose_name='Set name')),
                ('set_difficulty_level', models.CharField(choices=[('E', 'Easy'), ('M', 'Medium'), ('H', 'Hard')], default='E', max_length=1, verbose_name='set dificulty')),
                ('paragraph_question_collection', models.ManyToManyField(blank=True, to='core.Verbal_One_Paragraph_Many_Question', verbose_name='Paragraph based multiple question collection')),
                ('paragraph_selection_question_collection', models.ManyToManyField(blank=True, to='core.Verbal_Paragraph_Selection_Question', verbose_name='Paragraph selection question ')),
                ('simple_question_collection', models.ManyToManyField(blank=True, to='core.Simple_Question', verbose_name='Simple question collection')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='quant_set',
            name='simple_question_collection',
            field=models.ManyToManyField(blank=True, to='core.Simple_Question', verbose_name='Simple question collection'),
        ),
        migrations.AddField(
            model_name='quant_data_analysis_question',
            name='simple_question_collection',
            field=models.ManyToManyField(blank=True, to='core.Simple_Question', verbose_name='Data analysis question collection'),
        ),
        migrations.AddField(
            model_name='essay_set',
            name='essay_question_collection',
            field=models.ManyToManyField(blank=True, to='core.Essay_Writing_Question', verbose_name='Essay collection'),
        ),
    ]
