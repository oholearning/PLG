"""
Django settings for loksewa project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import json
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

from pkg_resources import resource_filename

# config.json contains the keys that need to overwrite in base.py
config_file = resource_filename("config", "config.json")

# Pull configuration detail from config/config.json file
with open(config_file) as configuration:
    config = json.load(configuration)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, 'loksewa_app'))

# print("base dir= "+BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vf#_6(1ozt0-74_*f^+q=t#g0t38_&(ps!m-g!=axkex95@ah6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # third party app
    'jet',
    'jet.dashboard',
    'admin_reorder',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
LOKSEWA_APP = [
    'loksewa_apps.core',
    'loksewa_apps.gre',
]
THIRD_PARTY_APP = [
    
]
# This is for rich text box 
INSTALLED_APPS += ('django_summernote', )

INSTALLED_APPS += LOKSEWA_APP 
INSTALLED_APPS += THIRD_PARTY_APP


MIDDLEWARE = [
    'admin_reorder.middleware.ModelAdminReorder',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
   
]
# MIDDLEWARE_CLASSES = (
#     'admin_reorder.middleware.ModelAdminReorder',
# )

ROOT_URLCONF = 'loksewa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'loksewa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

staticfile_path = BASE_DIR + config["STATIC_ROOT"]
try:
    STATIC_ROOT = staticfile_path
except KeyError:
    ImproperlyConfigured("{} improperly configured".format("STATIC_ROOT"))

STATICFILES_DIRS = [
    ('static'),
]

# This one is for django summernote
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, config["MEDIA_ROOT"])

# for django admin reorder app

ADMIN_REORDER = (
    # Keep original label and models
    'sites',
    # # Keep original label and models
    {
        'app': 'gre',
        'label': 'Manage GRE',
        'models': (
            'gre.SimpleQuestionWithOneBlank',
            'gre.SimpleQuestionWithTwoBlank',
            'gre.SimpleQuestionWithThreeBlank',
            'gre.SimpleQuestionWithNumericInput',
            'gre.SimpleQuestionWithTextInput',
            'gre.SimpleQuestionWithMultipleSelectionThreeInput',
            'gre.SimpleQuestionWithMultipleSelectionFiveInput',
            'gre.VerbalOneParagraphManyQuestion',
            'gre.QuantativeDataAnalysisQuestion'
            )
    },
 
    {
        'app': 'core',
        'label': 'Manage Miscellaneous items',
    },
    {
        'app': 'auth',
        'label': 'Manage Staff, users and group',
    },
    
    )